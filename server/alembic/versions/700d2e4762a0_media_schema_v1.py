"""media schema v1

Revision ID: 700d2e4762a0
Revises: 4b2a803e95b3
Create Date: 2025-08-27 21:59:34.253371

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '700d2e4762a0'
down_revision: Union[str, None] = '4b2a803e95b3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Robust upgrade that supports partially-applied prior attempts (SQLite)
    bind = op.get_bind()
    inspector = sa.inspect(bind)

    # Create 'series' table if missing
    if not inspector.has_table('series'):
        op.create_table(
            'series',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('tmdb_id', sa.Integer(), nullable=False),
            sa.Column('name', sa.String(length=512), nullable=False),
            sa.Column('year', sa.Integer(), nullable=True),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('tmdb_id'),
        )

    # Create 'library_scans' table if missing
    if not inspector.has_table('library_scans'):
        op.create_table(
            'library_scans',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('library_id', sa.Integer(), nullable=False),
            sa.Column('started_at', sa.BigInteger(), nullable=False),
            sa.Column('finished_at', sa.BigInteger(), nullable=True),
            sa.Column('status', sa.String(length=32), nullable=False),
            sa.Column('stats_json', sa.String(), nullable=False),
            sa.ForeignKeyConstraint(['library_id'], ['libraries.id'], ondelete='CASCADE'),
            sa.PrimaryKeyConstraint('id'),
        )

    # Add mtime column to media_files if missing
    mf_cols = {c['name'] for c in inspector.get_columns('media_files')}
    if 'mtime' not in mf_cols:
        op.add_column('media_files', sa.Column('mtime', sa.BigInteger(), nullable=True))

    # Batch-alter media_items
    mi_cols = {c['name'] for c in inspector.get_columns('media_items')}
    existing_indexes = {ix.get('name') for ix in inspector.get_indexes('media_items')}

    from alembic import op as _op
    with _op.batch_alter_table('media_items', schema=None) as batch_op:
        if 'series_id' not in mi_cols:
            batch_op.add_column(sa.Column('series_id', sa.Integer(), nullable=True))
        if 'season' not in mi_cols:
            batch_op.add_column(sa.Column('season', sa.Integer(), nullable=True))
        if 'episode' not in mi_cols:
            batch_op.add_column(sa.Column('episode', sa.Integer(), nullable=True))
        # Drop old unique if present
        try:
            batch_op.drop_constraint('uq_mediaitem_kind_tmdb', type_='unique')
        except Exception:
            pass
        # Index on (series_id, season, episode)
        if 'ix_mediaitem_series_se' not in existing_indexes:
            batch_op.create_index('ix_mediaitem_series_se', ['series_id', 'season', 'episode'], unique=False)
        # New uniqueness across dimensions
        try:
            batch_op.create_unique_constraint('uq_mediaitem_unique', ['kind', 'tmdb_id', 'series_id', 'season', 'episode'])
        except Exception:
            pass
        # FK to series
        try:
            batch_op.create_foreign_key('fk_media_items_series_id', 'series', ['series_id'], ['id'], ondelete='SET NULL')
        except Exception:
            pass
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - adjusted for SQLite batch mode ###
    from alembic import op as _op
    with _op.batch_alter_table('media_items', schema=None) as batch_op:
        try:
            batch_op.drop_constraint('fk_media_items_series_id', type_='foreignkey')
        except Exception:
            pass
        try:
            batch_op.drop_constraint('uq_mediaitem_unique', type_='unique')
        except Exception:
            pass
        try:
            batch_op.drop_index('ix_mediaitem_series_se')
        except Exception:
            pass
        batch_op.create_unique_constraint('uq_mediaitem_kind_tmdb', ['kind', 'tmdb_id'])
        batch_op.drop_column('episode')
        batch_op.drop_column('season')
        batch_op.drop_column('series_id')
    op.drop_column('media_files', 'mtime')
    op.drop_table('library_scans')
    op.drop_table('series')
    # ### end Alembic commands ###
